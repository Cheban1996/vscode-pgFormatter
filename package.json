{
  "name": "pgformatter",
  "displayName": "pgFormatter",
  "description": "A PostgreSQL SQL syntax beautifier",
  "author": {
    "name": "Brady Holt"
  },
  "version": "0.0.1",
  "publisher": "bradymholt",
  "engines": {
    "vscode": "^1.19.0"
  },
  "categories": [
    "Formatters",
    "Other"
  ],
  "license": "MIT",
  "homepage": "https://github.com/bradymholt/vscode-pgformatter",
  "repository": {
    "type": "git",
    "url": "https://github.com/bradymholt/vscode-pgformatter.git"
  },
  "bugs": {
    "url": "https://github.com/bradymholt/vscode-pgformatter/issues"
  },
  "activationEvents": [
    "onLanguage:sql"
  ],
  "main": "./out/extension",
  "contributes": {
    "languages": [
      {
        "id": "sql",
        "aliases": [
          "SQL"
        ],
        "extensions": [
          "sql"
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "pgFormatter Configuration",
      "properties": {
        "pgformatter.perlBinPath": {
          "type": "string",
          "default": "perl",
          "description": "Location of perl binary"
        },
        "pgformatter.anonymize": {
          "type": "boolean",
          "default": false,
          "description": "Obscure all literals in queries, useful to hide confidential data before formatting."
        },
        "pgformatter.commaStart": {
          "type": "boolean",
          "default": false,
          "description": "In a parameters list, start with the comma."
        },
        "pgformatter.commaEnd": {
          "type": "boolean",
          "default": true,
          "description": "In a parameters list, end with the comma."
        },
        "pgformatter.functionCase": {
          "type": "string",
          "default": "unchanged",
          "enum": [
            "unchanged",
            "lowercase",
            "uppercase",
            "capitalize"
          ],
          "description": "Case of the function names."
        },
        "pgformatter.maxLength": {
          "type": "number",
          "description": "Maximum length of a query."
        },
        "pgformatter.noComment": {
          "type": "boolean",
          "default": false,
          "description": "Remove any comments"
        },
        "pgformatter.placeholder": {
          "type": "string",
          "description": "Regex to find code that must not be changed."
        },
        "pgformatter.spaces": {
          "type": "number",
          "default": 4,
          "description": "Number of spaces to indent the code."
        },
        "pgformatter.separator": {
          "type": "string",
          "default": "'",
          "description": "Dynamic code separator"
        },
        "pgformatter.keywordCase": {
          "type": "string",
          "default": "uppercase",
          "enum": [
            "unchanged",
            "lowercase",
            "uppercase",
            "capitalize"
          ],
          "description": "Case of the reserved keywords."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.42",
    "@types/node": "^9.3.0",
    "typescript": "^2.6.1",
    "vscode": "^1.1.6"
  },
  "dependencies": {
    "@bradymholt/pgformatter": "^0.9.0"
  }
}
